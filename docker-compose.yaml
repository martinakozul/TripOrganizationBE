# While the Docker images themselves are supported for production usage,
# this docker-compose.yaml is designed to be used by developers to run
# an environment locally. It is not designed to be used in production.
# We recommend to use Kubernetes in production with our Helm Charts:
# https://docs.camunda.io/docs/self-managed/platform-deployment/kubernetes-helm/
# For local development, we recommend using KIND instead of `docker-compose`:
# https://docs.camunda.io/docs/self-managed/platform-deployment/helm-kubernetes/guides/local-kubernetes-cluster/

# This is a lightweight configuration with Zeebe, Operate, Tasklist, and Elasticsearch
# See docker-compose.yml for a configuration that also includes Optimize, Identity, and Keycloak.

services:
  trip_backend:
    container_name: trip_backend
    image: trip-backend-image:latest
    ports:
      - "8085:8080"
    networks:
      - trip_camunda-platform
    depends_on:
      - trip_zeebe
      - trip_elasticsearch
  trip_zeebe-deployer:
    container_name: trip_zeebe-deployer
    image: camunda/zeebe:8.6.4
    command:
      - /bin/sh
      - -c
      - |
        apk add --no-cache curl
        echo "Waiting for Zeebe to be ready..."
        while ! nc -z trip_zeebe 26500; do sleep 1; done
        echo "Zeebe is ready! Deploying resources..."
        for file in /resources/*; do
          if [ -f "$$file" ]; then
            case "$$file" in
              *.bpmn|*.dmn|*.form)
                echo "Deploying $$file"
                zbctl deploy "$$file"
                ;;
              *)
                echo "Skipping non-deployable file: $$file"
                ;;
            esac
          fi
        done
        echo "Deployment complete."
    volumes:
      - ./resources:/resources:ro
    depends_on:
      - trip_zeebe
    networks:
      - trip_camunda-platform
  trip_zeebe:
    image: camunda/zeebe:8.6.4
    container_name: trip_zeebe
    ports:
      - "26500:26500"
      - "9600:9600"
      - "8088:8080"
    environment:
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_CLASSNAME=io.camunda.zeebe.exporter.ElasticsearchExporter
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_URL=http://trip_elasticsearch:9200
      - ZEEBE_BROKER_EXPORTERS_ELASTICSEARCH_ARGS_BULK_SIZE=1
      - ZEEBE_BROKER_DATA_DISKUSAGECOMMANDWATERMARK=0.998
      - ZEEBE_BROKER_DATA_DISKUSAGEREPLICATIONWATERMARK=0.999
      - "JAVA_TOOL_OPTIONS=-Xms512m -Xmx512m"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "timeout 10s bash -c ':> /dev/tcp/127.0.0.1/9600' || exit 1" ]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - trip_zeebe:/usr/local/zeebe/data
    networks:
      - trip_camunda-platform
    depends_on:
      - trip_elasticsearch

  trip_operate:
    image: camunda/operate:8.6.4
    container_name: trip_operate
    ports:
      - "8081:8080"
    environment:
      - CAMUNDA_OPERATE_ZEEBE_GATEWAYADDRESS=trip_zeebe:26500
      - CAMUNDA_OPERATE_ELASTICSEARCH_URL=http://trip_elasticsearch:9200
      - CAMUNDA_OPERATE_ZEEBEELASTICSEARCH_URL=http://trip_elasticsearch:9200
      - CAMUNDA_OPERATE_CSRFPREVENTIONENABLED=false
      - management.endpoints.web.exposure.include=health
      - management.endpoint.health.probes.enabled=true
    healthcheck:
      test: [ "CMD-SHELL", "wget -O - -q 'http://localhost:9600/actuator/health/readiness'" ]
      interval: 30s
      timeout: 1s
      retries: 5
      start_period: 30s
    networks:
      - trip_camunda-platform
    depends_on:
      - trip_zeebe
      - trip_elasticsearch

  trip_tasklist:
    image: camunda/tasklist:8.6.4
    container_name: trip_tasklist
    ports:
      - "8082:8080"
    environment:
      - CAMUNDA_TASKLIST_ZEEBE_GATEWAYADDRESS=trip_zeebe:26500
      - CAMUNDA_TASKLIST_ZEEBE_RESTADDRESS=http://trip_zeebe:8080
      - CAMUNDA_TASKLIST_ELASTICSEARCH_URL=http://trip_elasticsearch:9200
      - CAMUNDA_TASKLIST_ZEEBEELASTICSEARCH_URL=http://trip_elasticsearch:9200
      - CAMUNDA_TASKLIST_CSRFPREVENTIONENABLED=false
      - management.endpoints.web.exposure.include=health
      - management.endpoint.health.probes.enabled=true
    healthcheck:
      test: [ "CMD-SHELL", "wget -O - -q 'http://localhost:9600/actuator/health/readiness'" ]
      interval: 30s
      timeout: 1s
      retries: 5
      start_period: 30s
    networks:
      - trip_camunda-platform
    depends_on:
      - trip_zeebe
      - trip_elasticsearch

  trip_connectors:
    image: camunda/connectors-bundle:8.6.4
    container_name: trip_connectors
    ports:
      - "8085:8080"
    environment:
      - ZEEBE_CLIENT_BROKER_GATEWAY-ADDRESS=trip_zeebe:26500
      - ZEEBE_CLIENT_SECURITY_PLAINTEXT=true
      - CAMUNDA_OPERATE_CLIENT_URL=http://trip_operate:8080
      - CAMUNDA_OPERATE_CLIENT_USERNAME=demo
      - CAMUNDA_OPERATE_CLIENT_PASSWORD=demo
      - management.endpoints.web.exposure.include=health
      - management.endpoint.health.probes.enabled=true
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/actuator/health/readiness" ]
      interval: 30s
      timeout: 1s
      retries: 5
      start_period: 30s
    env_file: connector-secrets.txt
    networks:
      - trip_camunda-platform
    depends_on:
      - trip_zeebe
      - trip_operate

  trip_elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.3
    container_name: trip_elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - xpack.security.enabled=false
      - cluster.routing.allocation.disk.threshold_enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9200/_cat/health | grep -q green" ]
      interval: 30s
      timeout: 5s
      retries: 3
    volumes:
      - trip_elastic:/usr/share/elasticsearch/data
    networks:
      - trip_camunda-platform

  trip_kibana:
    image: docker.elastic.co/kibana/kibana:8.15.3
    container_name: trip_kibana
    ports:
      - 5601:5601
    volumes:
      - trip_kibana:/usr/share/kibana/data
    networks:
      - trip_camunda-platform
    depends_on:
      - trip_elasticsearch
    profiles:
      - kibana

volumes:
  trip_zeebe:
  trip_elastic:
  trip_kibana:

networks:
  trip_camunda-platform: